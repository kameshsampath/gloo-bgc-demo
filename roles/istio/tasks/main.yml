- name: "Ensure Kubernetes Clusters are reachable"
  kubernetes.core.k8s_info:
    context: "{{ item.value.k8s_context }}"
    kind: Node
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  register: nodes
  when: ( item.value.install_istio | bool )
  tags:
   - istio

- name: "Download Istio"
  get_url:
    url: "https://github.com/istio/istio/releases/download/{{ istio_version }}/istio-{{ istio_version }}-linux-amd64.tar.gz"
    checksum: "sha256:fbd4d8bba838203c0f3631fb3699955ed3bd27802b0ab9ceb109c1fe337fa6d2"
    dest: "/tmp"
  tags:
   - istio

- name: "Extract Istio {{ istio_version }}"
  unarchive:
    src: "/tmp/istio-{{ istio_version }}-linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes
  register: istio_install
  tags:
   - istio

- name: "Update .bashrc"
  ansible.builtin.blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK Istio {{ istio_version }}"
    block: |
      ISTIO_HOME=~/istio-{{ istio_version }}
      PATH=$ISTIO_HOME/bin:$PATH
    dest: "{{ ansible_env.HOME }}/.bashrc"
  when: istio_install
  tags:
   - istio

- name: "Ensure Istio Operator Namespace"
  kubernetes.core.k8s:
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: istio-operator
        labels:
          app.kubernetes.io/managed-by: Helm
        annotations:
          meta.helm.sh/release-name: istio-operator
          meta.helm.sh/release-namespace: istio-operator
    state: present
    context: "{{ item.value.k8s_context }}"
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  when: ( item.value.install_istio | bool )
  tags:
    - istio

- name: "Deploy Istio Operator"
  kubernetes.core.helm:
    release_name: istio-operator
    chart_ref: "{{ ansible_env.HOME}}/istio-{{ istio_version }}/manifests/charts/istio-operator"
    release_namespace: istio-operator
    context: "{{ item.value.k8s_context }}"
    wait: yes
    wait_timeout: 5m
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  when: ( item.value.install_istio | bool )
  tags:
    - istio
  register: istio_operator_install
  
- name: "Ensure Istio Namespace"
  kubernetes.core.k8s:
    name: istio-system
    api_version: v1
    kind: Namespace
    state: present
    context: "{{ item.value.k8s_context }}"
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  when: ( item.value.install_istio | bool )
  tags:
    - istio

- name: "Deploy Istio"
  kubernetes.core.k8s:
    state: present
    namespace: istio-system
    template:
      path: 'istio-cr.yaml.j2'
    context: "{{ item.value.k8s_context }}"
    wait: true
    wait_timeout: 600
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  when: ( item.value.install_istio | bool )
  tags:
    - istio

- name: "Deploy istiod Gateway and Virtual Service"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('kubernetes.core.kustomize', dir=role_path +'/files/istiod') }}"
    context: "{{ item.value.k8s_context }}"
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
    GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
  loop: "{{ gloo_mesh | dict2items}}"
  loop_control:
    label: "{{ item.key }}"
  when: ( item.value.install_istio | bool )
  tags:
    - istio
  register: istiod_resources

